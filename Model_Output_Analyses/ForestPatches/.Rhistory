Data_Abund[Data_Abund=="-1"]<-0
dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
dataM$Abundance<-rowSums(dataM[c(40:52)])
dataM<-subset(dataM, Abundance > 0)
dataM[dataM=="-9999"]<-NA
data<-read.csv("U:/CLI/Field Surveys/eMammal/CLI_mammal_environmental_native3.csv",header=TRUE) #we removed values of -9999 in excel
Data_Abund<-data[,-c(1,2,4,5,19:52)] #only abundance
#Data_Abund$Deployment<-as.character(Data_Abund$Deployment)
Data_Abund<-Data_Abund%>%replace(is.na(.), 0)
Data_Abund<-mutate(Data_Abund, SpRichness=specnumber(Data_Abund))
data<-read.csv("U:/CLI/Field Surveys/eMammal/CLI_mammal_environmental_native3.csv",header=TRUE) #we removed values of -9999 in excel
Data_Abund<-data[,-c(1,2,4,5,19:52)] #only abundance
Data_Abund$Deployment<-as.character(Data_Abund$Deployment)
Data_Abund<-Data_Abund%>%replace(is.na(.), 0)
Data_Abund<-mutate(Data_Abund, SpRichness=specnumber(Data_Abund))
Data_Abund$SpRichness<-Data_Abund$SpRichness-1
Data_Abund[Data_Abund=="-1"]<-0
data<-read.csv("U:/CLI/Field Surveys/eMammal/CLI_mammal_environmental_native3.csv",header=TRUE) #we removed values of -9999 in excel
Data_Abund<-data[,-c(1,2,4,5,19:52)] #only abundance
Data_Abund$Deployment<-as.character(Data_Abund$Deployment)
Data_Abund<-Data_Abund%>%replace(is.na(.), 0)
Data_Abund<-mutate(Data_Abund, SpRichness=specnumber(Data_Abund))
Data_Abund$SpRichness<-Data_Abund$SpRichness-1
dataM<-cbind(data,Data_Abund)
View(dataM)
#dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
#dataM$Abundance<-rowSums(dataM[c(40:52)])
dataM<-subset(dataM, Abundance > 0)
#dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
dataM$Abundance<-rowSums(dataM[c(6:18)])
data$spRichness<-Data_Abund$SpRichness
dataM<-data
data$SpRichness<-Data_Abund$SpRichness
dataM<-data
dataM[6:18]
#dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
dataM$Abundance<-rowSums(dataM[c(6:18)])
dataM<-subset(dataM, Abundance > 0)
dataM[dataM=="-9999"]<-NA
data<-read.csv("U:/CLI/Field Surveys/eMammal/CLI_mammal_environmental_native3.csv",header=TRUE) #we removed values of -9999 in excel
Data_Abund<-data[,-c(1,2,4,5,19:52)] #only abundance
Data_Abund$Deployment<-as.character(Data_Abund$Deployment)
Data_Abund<-Data_Abund%>%replace(is.na(.), 0)
Data_Abund<-mutate(Data_Abund, SpRichness=specnumber(Data_Abund))
Data_Abund$SpRichness<-Data_Abund$SpRichness-1
data$SpRichness<-Data_Abund$SpRichness
dataM<-data
#dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
dataM$Abundance<-rowSums(dataM[c(6:18)])
dataM<-subset(dataM, Abundance > 0)
dataM[dataM=="-9999"]<-NA
data<-read.csv("U:/CLI/Field Surveys/eMammal/CLI_mammal_environmental_native3.csv",header=TRUE) #we removed values of -9999 in excel
Data_Abund<-data[,-c(1,2,4,5,19:52)] #only abundance
Data_Abund$Deployment<-as.character(Data_Abund$Deployment)
Data_Abund<-Data_Abund%>%replace(is.na(.), 0)
Data_Abund<-mutate(Data_Abund, SpRichness=specnumber(Data_Abund))
Data_Abund$SpRichness<-Data_Abund$SpRichness-1
data$SpRichness<-Data_Abund$SpRichness
dataM<-data
#dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
dataM$Abundance<-rowSums(dataM[c(6:18)])
dataM<-subset(dataM, Abundance > 0)
data<-read.csv("U:/CLI/Field Surveys/eMammal/CLI_mammal_environmental_nonnative3.csv",header=TRUE)
Data_Abund<-data[,-c(1,2,4,5,10:43)] #only abundance
Data_Abund$Deployment<-as.character(Data_Abund$Deployment)
Data_Abund<-Data_Abund%>%replace(is.na(.), 0)
Data_Abund<-mutate(Data_Abund, SpRichness=specnumber(Data_Abund))
Data_Abund$SpRichness<-Data_Abund$SpRichness-1
data$SpRichness<-Data_Abund$SpRichness
dataMN<-data
#dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
dataMN$Abundance<-rowSums(dataMN[c(6:9)])
dataMN
View(dataMN)
dataMN<-subset(dataM, Abundance > 0)
data<-read.csv("U:/CLI/Field Surveys/eMammal/CLI_mammal_environmental_nonnative3.csv",header=TRUE)
Data_Abund<-data[,-c(1,2,4,5,10:43)] #only abundance
Data_Abund$Deployment<-as.character(Data_Abund$Deployment)
Data_Abund<-Data_Abund%>%replace(is.na(.), 0)
Data_Abund<-mutate(Data_Abund, SpRichness=specnumber(Data_Abund))
Data_Abund$SpRichness<-Data_Abund$SpRichness-1
data$SpRichness<-Data_Abund$SpRichness
dataMN<-data
#dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
dataMN$Abundance<-rowSums(dataMN[c(6:9)])
dataMN<-subset(dataMN, Abundance > 0)
dataMN[dataMN=="-9999"]<-NA
dataI<-read.csv("U:/CLI/Field Surveys/Invasive/SchSt_Invasive_Grid_join.csv",header=TRUE)
View(dataI)
data<-read.csv("U:/CLI/Field Surveys/Bees/Data/apidae_subset_bluevane_bee_data_2014_2017_CF_OneYearsData.csv",header=TRUE)
data$Date_collected<-as.POSIXct(data$Date_collected,format="%m/%d/%Y")
SummaryData<-data%>%group_by(Year,Lat,Lon,SiteLocatC,Family_species)%>% #group by site and spp
summarize(Abundance=sum(Number_of_specimens))%>% #sum abundance of each spp by site
spread(Family_species, Abundance)%>% #transpose
replace(is.na(.), 0)
SummaryData_Abund<-SummaryData[,-c(1:3)]
SummaryData_Abund$SiteLocatC<-as.character(SummaryData_Abund$SiteLocatC)
SummaryData_Abund<-mutate(SummaryData_Abund,SpRichness=specnumber(SummaryData_Abund))
SummaryData_Abund$SpRichness<-SummaryData_Abund$SpRichness-1
data<-left_join(SummaryData[,c(1:4)], SummaryData_Abund,by="SiteLocatC")
data$Abundance<-rowSums(data[c(5:16)])
dataE<-read.csv("U:/CLI/Field Surveys/Bees/Data/apidae_subset_bluevane_bee_data_2014_2017_CF_OneYearsDataV2.csv",header=TRUE)
dataE[dataE=="-9999"]<-NA
data<-left_join(data, dataE[,c(5,20:53)], by="SiteLocatC")
ggplotRegression<- function(fit){
ggplot(fit$model,aes_string(x=names(fit$model)[2],y=names(fit$model)[1]))+
geom_point()+
stat_smooth(method="glm", col="red")+
labs(title=paste(#"Adj R2 = ", signif(summary(fit)$adj.r.squared,5),
"Intercept = ", signif(fit$coef[[1]],5),
"Slope = ", signif(fit$coef[[2]],5),
"P-value = ",signif(summary(fit)$coef[2,4],5)))
}
LU_Metric<-list('dev_250'="dev_250", 'for_250'="for_250", 'gra_250'="gra_250", 'cro_250'="cro_250",'dev_500'="dev_500",	'for_500'="for_500",'gra_500'="gra_500",	'cro_500'="cro_500",	'dev_1000'="dev_1000",	'for_1000'="for_1000",'gra_1000'="gra_1000", 'cro_1000'="cro_1000",	'dev_5000'="dev_500",	'for_5000'="for_5000",	'gra_5000'="gra_5000", 'cro_5000'="cro_5000",	'Cont_Gra1k'="Cont_Gra1k", 'Dist_Gra'="Cont_Gra1k",	'Dist_Cro'="Dist_Cro", 'Dist_For'="Dist_For",	'Dist_Dev'="Dist_Dev",'Dist_ForC'="Dist_ForC",	'Dist_GraC'="Dist_GraC",	'For_Area_x'="For_Area_x",	'Gra_Area'="Gra_Area",'For_CAI_x'="For_CAI_x",'P_ForC_250'="P_ForC_250", 'P_ForC_500'="P_ForC_500",	'P_ForC_1k'="P_ForC_1k",	'P_ForC_5k'="P_ForC_5k",	'P_GraC_250'="P_GraC_250", 'P_GraC_500'="P_GraC_500",	'P_GraC_1k'="P_GraC_1k",'P_GraC_5k'="P_GraC_5k")
model<-list()
for(i in 1:length(LU_Metric)){
model[[i]]<-glm(SpRichness ~ get(LU_Metric[[i]][1]), family="poisson", data=data)
}
names(model)<-c("dev_250", "for_250","gra_250", "cro_250","dev_500",	"for_500","gra_500","cro_500",	"dev_1000","for_1000","gra_1000", "cro_1000",	"dev_500",	"for_5000",	"gra_5000", "cro_5000",	"Cont_Gra1k", "Cont_Gra1k",	"Dist_Cro", "Dist_For",	"Dist_Dev","Dist_ForC",	"Dist_GraC",	"For_Area_x",	"Gra_Area","For_CAI_x","P_ForC_250", "P_ForC_500","P_ForC_1k","P_ForC_5k",	"P_GraC_250", "P_GraC_500",	"P_GraC_1k","P_GraC_5k")
for(j in 1:length(model)){
par(mfrow=c(2,2))
plot(model[[j]], main=names(model[j]))
}
lapply(model, function(x){
summary(x)
})
for(m in 1:length(model)){
cov.b<-vcovHC(model[[m]], type="HC0")
std.err <- sqrt(diag(cov.b))
r.est <- cbind(Estimate= coef(model[[m]]), "Robust SE" = std.err,
"Pr(>|z|)" = 2 * pnorm(abs(coef(model[[m]])/std.err), lower.tail=FALSE),
LL = coef(model[[m]]) - 1.96 * std.err,
UL = coef(model[[m]]) + 1.96 * std.err)
print(names(model[m]))
print(r.est)
print(with(model[[m]], cbind(res.deviance =deviance, df=df.residual, p=pchisq(deviance, df.residual, lower.tail=FALSE))))
}
LU_Metric<-list('dev_250'="dev_250", 'for_250'="for_250", 'gra_250'="gra_250", 'cro_250'="cro_250",'dev_500'="dev_500",	'for_500'="for_500",'gra_500'="gra_500",	'cro_500'="cro_500",	'dev_1000'="dev_1000",	'for_1000'="for_1000",'gra_1000'="gra_1000", 'cro_1000'="cro_1000",	'dev_5000'="dev_500",	'for_5000'="for_5000",	'gra_5000'="gra_5000", 'cro_5000'="cro_5000",	'Cont_Gra1k'="Cont_Gra1k", 'Dist_Gra'="Cont_Gra1k",	'Dist_Cro'="Dist_Cro", 'Dist_For'="Dist_For",	'Dist_Dev'="Dist_Dev",'Dist_ForC'="Dist_ForC",	'Dist_GraC'="Dist_GraC",	'For_Area_x'="For_Area_x",	'Gra_Area'="Gra_Area",'For_CAI_x'="For_CAI_x",'P_ForC_250'="P_ForC_250", 'P_ForC_500'="P_ForC_500",	'P_ForC_1k'="P_ForC_1k",	'P_ForC_5k'="P_ForC_5k",	'P_GraC_250'="P_GraC_250", 'P_GraC_500'="P_GraC_500",	'P_GraC_1k'="P_GraC_1k",'P_GraC_5k'="P_GraC_5k")
modelA<-list()
for(i in 1:length(LU_Metric)){
modelA[[i]]<-glm(Abundance ~ get(LU_Metric[[i]][1]), family="poisson", data=data)
}
names(modelA)<-c("dev_250", "for_250","gra_250", "cro_250","dev_500",	"for_500","gra_500","cro_500",	"dev_1000","for_1000","gra_1000", "cro_1000",	"dev_500",	"for_5000",	"gra_5000", "cro_5000",	"Cont_Gra1k", "Cont_Gra1k",	"Dist_Cro", "Dist_For",	"Dist_Dev","Dist_ForC",	"Dist_GraC",	"For_Area_x",	"Gra_Area","For_CAI_x","P_ForC_250", "P_ForC_500","P_ForC_1k","P_ForC_5k",	"P_GraC_250", "P_GraC_500",	"P_GraC_1k","P_GraC_5k")
for(j in 1:length(modelA)){
par(mfrow=c(2,2))
plot(modelA[[j]], main=names(modelA[j]))
}
lapply(modelA, function(x){
summary(x)
})
### Quantiles
```{r}
for(m in 1:length(modelA)){
cov.b<-vcovHC(modelA[[m]], type="HC0")
std.err <- sqrt(diag(cov.b))
r.est <- cbind(Estimate= coef(modelA[[m]]), "Robust SE" = std.err,
"Pr(>|z|)" = 2 * pnorm(abs(coef(modelA[[m]])/std.err), lower.tail=FALSE),
LL = coef(modelA[[m]]) - 1.96 * std.err,
UL = coef(modelA[[m]]) + 1.96 * std.err)
print(names(modelA[m]))
print(r.est)
print(with(modelA[[m]], cbind(res.deviance =deviance, df=df.residual, p=pchisq(deviance, df.residual, lower.tail=FALSE))))
}
data<-read.csv("U:/CLI/Field Surveys/eMammal/CLI_mammal_environmental_native3.csv",header=TRUE) #we removed values of -9999 in excel
Data_Abund<-data[,-c(1,2,4,5,19:52)] #only abundance
Data_Abund$Deployment<-as.character(Data_Abund$Deployment)
Data_Abund<-Data_Abund%>%replace(is.na(.), 0)
Data_Abund<-mutate(Data_Abund, SpRichness=specnumber(Data_Abund))
Data_Abund$SpRichness<-Data_Abund$SpRichness-1
data$SpRichness<-Data_Abund$SpRichness
dataM<-data
#dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
dataM$Abundance<-rowSums(dataM[c(6:18)])
dataM<-subset(dataM, Abundance > 0)
dataM[dataM=="-9999"]<-NA
modelM<-list()
for(i in 1:length(LU_Metric)){
modelM[[i]]<-glm(Abundance ~ get(LU_Metric[[i]][1]), family="poisson", data=dataM)
}
names(modelM)<-c("dev_250", "for_250","gra_250", "cro_250","dev_500",	"for_500","gra_500","cro_500",	"dev_1000","for_1000","gra_1000", "cro_1000",	"dev_500",	"for_5000",	"gra_5000", "cro_5000",	"Cont_Gra1k", "Cont_Gra1k",	"Dist_Cro", "Dist_For",	"Dist_Dev","Dist_ForC",	"Dist_GraC",	"For_Area_x",	"Gra_Area","For_CAI_x","P_ForC_250", "P_ForC_500","P_ForC_1k","P_ForC_5k",	"P_GraC_250", "P_GraC_500",	"P_GraC_1k","P_GraC_5k")
for(j in 1:length(modelM)){
par(mfrow=c(2,2))
plot(modelM[[j]], main=names(modelM[j]))
}
lapply(modelM, function(x){
summary(x)
})
for(m in 1:length(modelM)){
cov.b<-vcovHC(modelM[[m]], type="HC0")
std.err <- sqrt(diag(cov.b))
r.est <- cbind(Estimate= coef(modelM[[m]]), "Robust SE" = std.err,
"Pr(>|z|)" = 2 * pnorm(abs(coef(modelM[[m]])/std.err), lower.tail=FALSE),
LL = coef(modelM[[m]]) - 1.96 * std.err,
UL = coef(modelM[[m]]) + 1.96 * std.err)
print(names(modelM[m]))
print(r.est)
print(with(modelM[[m]], cbind(res.deviance =deviance, df=df.residual, p=pchisq(deviance, df.residual, lower.tail=FALSE))))
}
data<-read.csv("U:/CLI/Field Surveys/eMammal/CLI_mammal_environmental_nonnative3.csv",header=TRUE)
Data_Abund<-data[,-c(1,2,4,5,10:43)] #only abundance
Data_Abund$Deployment<-as.character(Data_Abund$Deployment)
Data_Abund<-Data_Abund%>%replace(is.na(.), 0)
Data_Abund<-mutate(Data_Abund, SpRichness=specnumber(Data_Abund))
Data_Abund$SpRichness<-Data_Abund$SpRichness-1
data$SpRichness<-Data_Abund$SpRichness
dataMN<-data
#dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
dataMN$Abundance<-rowSums(dataMN[c(6:9)])
dataMN<-subset(dataMN, Abundance > 0)
dataMN[dataMN=="-9999"]<-NA
LU_Metric<-list('dev_500'="dev_500",	'for_500'="for_500",'gra_500'="gra_500",	'cro_500'="cro_500",'P_ForC_500'="P_ForC_500", 'P_GraC_500'="P_GraC_500")
LU_Metric<-list('dev_500'="dev_500",	'for_500'="for_500",'gra_500'="gra_500",	'cro_500'="cro_500",'P_ForC_500'="P_ForC_500", 'P_GraC_500'="P_GraC_500")
modelI<-list()
for(i in 1:length(LU_Metric)){
modelI[[i]]<-glm(Sum_Woody ~ get(LU_Metric[[i]][1]), family="poisson", data=dataI)
}
names(modelI)<-c("dev_500",	"for_500","gra_500","cro_500",	"P_GraC_250", "P_GraC_500")
for(j in 1:length(modelI)){
par(mfrow=c(2,2))
plot(modelI[[j]], main=names(modelI[j]))
}
lapply(modelI, function(x){
summary(x)
})
for(m in 1:length(modelI)){
cov.b<-vcovHC(modelI[[m]], type="HC0")
std.err <- sqrt(diag(cov.b))
r.est <- cbind(Estimate= coef(modelI[[m]]), "Robust SE" = std.err,
"Pr(>|z|)" = 2 * pnorm(abs(coef(modelI[[m]])/std.err), lower.tail=FALSE),
LL = coef(modelI[[m]]) - 1.96 * std.err,
UL = coef(modelI[[m]]) + 1.96 * std.err)
print(names(modelI[m]))
print(r.est)
print(with(modelI[[m]], cbind(res.deviance =deviance, df=df.residual, p=pchisq(deviance, df.residual, lower.tail=FALSE))))
}
dataB<-read.csv("U:/CLI/Field Surveys/Birds/Birds_Pre2018_join.csv")
dataB[dataI=="-9999"]<-NA
dataB[dataB=="-9999"]<-NA
dataB<-read.csv("U:/CLI/Field Surveys/Birds/Birds_Pre2018_join.csv")
dataB[dataB=="-9999"]<-NA
LU_Metric<-list('dev_250'="dev_250", 'for_250'="for_250", 'gra_250'="gra_250", 'cro_250'="cro_250",'dev_500'="dev_500",	'for_500'="for_500",'gra_500'="gra_500",	'cro_500'="cro_500",	'dev_1000'="dev_1000",	'for_1000'="for_1000",'gra_1000'="gra_1000", 'cro_1000'="cro_1000",	'dev_5000'="dev_500",	'for_5000'="for_5000",	'gra_5000'="gra_5000", 'cro_5000'="cro_5000",	'Cont_Gra1k'="Cont_Gra1k", 'Dist_Gra'="Cont_Gra1k",	'Dist_Cro'="Dist_Cro", 'Dist_For'="Dist_For",	'Dist_Dev'="Dist_Dev",'Dist_ForC'="Dist_ForC",	'Dist_GraC'="Dist_GraC",	'For_Area_x'="For_Area_x",	'Gra_Area'="Gra_Area",'For_CAI_x'="For_CAI_x",'P_ForC_250'="P_ForC_250", 'P_ForC_500'="P_ForC_500",	'P_ForC_1k'="P_ForC_1k",	'P_ForC_5k'="P_ForC_5k",	'P_GraC_250'="P_GraC_250", 'P_GraC_500'="P_GraC_500",	'P_GraC_1k'="P_GraC_1k",'P_GraC_5k'="P_GraC_5k")
LU_Metric<-list('dev_250'="dev_250", 'for_250'="for_250", 'gra_250'="gra_250", 'cro_250'="cro_250",'dev_500'="dev_500",	'for_500'="for_500",'gra_500'="gra_500",	'cro_500'="cro_500",	'dev_1000'="dev_1000",	'for_1000'="for_1000",'gra_1000'="gra_1000", 'cro_1000'="cro_1000",	'dev_5000'="dev_500",	'for_5000'="for_5000",	'gra_5000'="gra_5000", 'cro_5000'="cro_5000",	'Cont_Gra1k'="Cont_Gra1k", 'Dist_Gra'="Cont_Gra1k",	'Dist_Cro'="Dist_Cro", 'Dist_For'="Dist_For",	'Dist_Dev'="Dist_Dev",'Dist_ForC'="Dist_ForC",	'Dist_GraC'="Dist_GraC",	'For_Area_x'="For_Area_x",	'Gra_Area'="Gra_Area",'For_CAI_x'="For_CAI_x",'P_ForC_250'="P_ForC_250", 'P_ForC_500'="P_ForC_500",	'P_ForC_1k'="P_ForC_1k",	'P_ForC_5k'="P_ForC_5k",	'P_GraC_250'="P_GraC_250", 'P_GraC_500'="P_GraC_500",	'P_GraC_1k'="P_GraC_1k",'P_GraC_5k'="P_GraC_5k")
model<-list()
for(i in 1:length(LU_Metric)){
model[[i]]<-glm(SpRichness ~ get(LU_Metric[[i]][1]), family="poisson", data=data)
}
names(model)<-c("dev_250", "for_250","gra_250", "cro_250","dev_500",	"for_500","gra_500","cro_500",	"dev_1000","for_1000","gra_1000", "cro_1000",	"dev_500",	"for_5000",	"gra_5000", "cro_5000",	"Cont_Gra1k", "Cont_Gra1k",	"Dist_Cro", "Dist_For",	"Dist_Dev","Dist_ForC",	"Dist_GraC",	"For_Area_x",	"Gra_Area","For_CAI_x","P_ForC_250", "P_ForC_500","P_ForC_1k","P_ForC_5k",	"P_GraC_250", "P_GraC_500",	"P_GraC_1k","P_GraC_5k")
for(j in 1:length(model)){
par(mfrow=c(2,2))
plot(model[[j]], main=names(model[j]))
}
lapply(model, function(x){
summary(x)
})
View(data)
data<-read.csv("U:/CLI/Field Surveys/Bees/Data/apidae_subset_bluevane_bee_data_2014_2017_CF_OneYearsData.csv",header=TRUE)
data$Date_collected<-as.POSIXct(data$Date_collected,format="%m/%d/%Y")
SummaryData<-data%>%group_by(Year,Lat,Lon,SiteLocatC,Family_species)%>% #group by site and spp
summarize(Abundance=sum(Number_of_specimens))%>% #sum abundance of each spp by site
spread(Family_species, Abundance)%>% #transpose
replace(is.na(.), 0)
SummaryData_Abund<-SummaryData[,-c(1:3)]
SummaryData_Abund$SiteLocatC<-as.character(SummaryData_Abund$SiteLocatC)
SummaryData_Abund<-mutate(SummaryData_Abund,SpRichness=specnumber(SummaryData_Abund))
SummaryData_Abund$SpRichness<-SummaryData_Abund$SpRichness-1
data<-left_join(SummaryData[,c(1:4)], SummaryData_Abund,by="SiteLocatC")
data$Abundance<-rowSums(data[c(5:16)])
dataE<-read.csv("U:/CLI/Field Surveys/Bees/Data/apidae_subset_bluevane_bee_data_2014_2017_CF_OneYearsDataV2.csv",header=TRUE)
dataE[dataE=="-9999"]<-NA
data<-left_join(data, dataE[,c(5,20:53)], by="SiteLocatC")
View(data)
data$dev_250
LU_Metric<-list('dev_250'="dev_250", 'for_250'="for_250", 'gra_250'="gra_250", 'cro_250'="cro_250",'dev_500'="dev_500",	'for_500'="for_500",'gra_500'="gra_500",	'cro_500'="cro_500",	'dev_1000'="dev_1000",	'for_1000'="for_1000",'gra_1000'="gra_1000", 'cro_1000'="cro_1000",	'dev_5000'="dev_500",	'for_5000'="for_5000",	'gra_5000'="gra_5000", 'cro_5000'="cro_5000",	'Cont_Gra1k'="Cont_Gra1k", 'Dist_Gra'="Cont_Gra1k",	'Dist_Cro'="Dist_Cro", 'Dist_For'="Dist_For",	'Dist_Dev'="Dist_Dev",'Dist_ForC'="Dist_ForC",	'Dist_GraC'="Dist_GraC",	'For_Area_x'="For_Area_x",	'Gra_Area'="Gra_Area",'For_CAI_x'="For_CAI_x",'P_ForC_250'="P_ForC_250", 'P_ForC_500'="P_ForC_500",	'P_ForC_1k'="P_ForC_1k",	'P_ForC_5k'="P_ForC_5k",	'P_GraC_250'="P_GraC_250", 'P_GraC_500'="P_GraC_500",	'P_GraC_1k'="P_GraC_1k",'P_GraC_5k'="P_GraC_5k")
model<-list()
for(i in 1:length(LU_Metric)){
model[[i]]<-glm(SpRichness ~ get(LU_Metric[[i]][1]), family="poisson", data=data)
}
names(model)<-c("dev_250", "for_250","gra_250", "cro_250","dev_500",	"for_500","gra_500","cro_500",	"dev_1000","for_1000","gra_1000", "cro_1000",	"dev_500",	"for_5000",	"gra_5000", "cro_5000",	"Cont_Gra1k", "Cont_Gra1k",	"Dist_Cro", "Dist_For",	"Dist_Dev","Dist_ForC",	"Dist_GraC",	"For_Area_x",	"Gra_Area","For_CAI_x","P_ForC_250", "P_ForC_500","P_ForC_1k","P_ForC_5k",	"P_GraC_250", "P_GraC_500",	"P_GraC_1k","P_GraC_5k")
data<-read.csv("U:/CLI/Field Surveys/eMammal/CLI_mammal_environmental_native3.csv",header=TRUE) #we removed values of -9999 in excel
Data_Abund<-data[,-c(1,2,4,5,19:52)] #only abundance
Data_Abund$Deployment<-as.character(Data_Abund$Deployment)
Data_Abund<-Data_Abund%>%replace(is.na(.), 0)
Data_Abund<-mutate(Data_Abund, SpRichness=specnumber(Data_Abund))
Data_Abund$SpRichness<-Data_Abund$SpRichness-1
data$SpRichness<-Data_Abund$SpRichness
dataM<-data
#dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
dataM$Abundance<-rowSums(dataM[c(6:18)])
dataM<-subset(dataM, Abundance > 0)
dataM[dataM=="-9999"]<-NA
glm(Abundance~dev_250, family="poisson", data=dataM)
TestM<-glm(Abundance~dev_250, family="poisson", data=dataM)
summary(TestM)
View(dataM)
View(dataMN)
View(dataB)
min(dataB$Bird_Abundance)
min(dataB$Bird_Richness)
write.csv(dataM,"U:/CLI/Field Surveys/eMammal/CLI_NativeMammal_8-22-18.csv")
data<-read.csv("U:/CLI/Field Surveys/eMammal/CLI_mammal_environmental_native3.csv",header=TRUE) #we removed values of -9999 in excel
Data_Abund<-data[,-c(1,2,4,5,19:52)] #only abundance
Data_Abund$Deployment<-as.character(Data_Abund$Deployment)
Data_Abund<-Data_Abund%>%replace(is.na(.), 0)
Data_Abund<-mutate(Data_Abund, SpRichness=specnumber(Data_Abund))
Data_Abund$SpRichness<-Data_Abund$SpRichness-1
data$SpRichness<-Data_Abund$SpRichness
dataM<-data
#dataM<-left_join(data[,c(1,2,3,4,5,19:52)],Data_Abund, by=c("Deployment"))#Combined back to data
dataM$Abundance<-rowSums(dataM[c(6:18)])
dataM<-subset(dataM, Abundance > 0)
dataM[dataM=="-9999"]<-NA
write.csv(dataM,"U:/CLI/Field Surveys/eMammal/CLI_NativeMammal_8-22-18.csv")
write.csv(dataM,"U:/CLI/Field Surveys/eMammal/CLI_NativeMammal_8-22-18.csv")
dataM<-dataM%>%replace(is.na(.), 0)
write.csv(dataM,"U:/CLI/Field Surveys/eMammal/CLI_NativeMammal_8-22-18.csv", row.names=FALSE)
library(raster)
library(rgdal)
library(bnspatial)
library(reshape2)
library(dplyr)
library(tidyr)
# metrics
ClimateRes <- raster("U:/CLI/SpatialData/VAClipRaw/VA_Habitat/VA_Habitat_Ed/ClimateResilience/ClimateResilience_0v1.tif")
library(raster)
install.packages("Rcpp")
r
library(raster)
library(rgdal)
library(bnspatial)
library(reshape2)
library(dplyr)
library(tidyr)
library(raster)
library(rgdal)
library(bnspatial)
library(reshape2)
library(dplyr)
library(tidyr)
# metrics
ClimateRes <- raster("U:/CLI/SpatialData/VAClipRaw/VA_Habitat/VA_Habitat_Ed/ClimateResilience/ClimateResilience_0v1.tif")
EO <- raster("V:/IaraSpatialLayers/SpatialData/VAClipRaw/VA_Species/Species_Ed/EO_count.tif")
WatershedConsPrior <- raster("U:/CLI/SpatialData/VAClipRaw/VA_HydroWatersh/VA_HydroWatersh_ed/ConsPrior_prjC.tif")
PI <- raster("U:/CLI/PreparedRasters/StudyAreaBndy/PI_16_an.img")
# forest masks
for.2011 <- raster("U:/CLI/SpatialData/VAClipRaw/VA_NLCD/NLCD_Ed/indv/for")
for.Q1 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q1_05_for_onlyND.tif")
for.Q2 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q2_05_for_onlyND.tif")
for.Q3 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q3_05_for_onlyND.tif")
for.Q4 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q4_05_for_onlyND.tif")
for.RT <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_RT_05_for_onlyND.tif")
ClimateRes.2011 <- extractByMask(ClimateRes, for.2011, spatial=TRUE)
# get county polygon (later - can i do it by raster instead?)
counties.poly <- readOGR(dsn=("U:/CLI/SpatialData/VAClipRaw/VA_Boundaries/CountiesEd/ExCntyCensus_SA_NoCities.shp"), layer="ExCntyCensus_SA_NoCities")
TabulateArea <- function(indx, extracted, counties.poly, cntyname) {
dat <- as.data.frame(table(extracted[[indx]]))
dat$name <- counties.poly[[cntyname]][[indx]]
return(dat)
}
ext <- extract(ClimateRes.2011, counties.poly, method="simple")
ext <- extract(ClimateRes, counties.poly, method="simple")
ext <- extract(ClimateRes.2011, counties.poly, method="simple")
# get county polygon (later - can i do it by raster instead?)
counties.poly <- readOGR(dsn=("U:/CLI/SpatialData/VAClipRaw/VA_Boundaries/CountiesEd/ExCntyCensus_SA.shp"), layer="ExCntyCensus_SA")
TabulateArea <- function(indx, extracted, counties.poly, cntyname) {
dat <- as.data.frame(table(extracted[[indx]]))
dat$name <- counties.poly[[cntyname]][[indx]]
return(dat)
}
ext <- extract(ClimateRes.2011, counties.poly, method="simple")
# get county polygon (later - can i do it by raster instead?)
counties.poly <- readOGR(dsn=("U:/CLI/SpatialData/VAClipRaw/VA_Boundaries/CountiesEd/ExCntyCensus_SA_NoCities.shp"), layer="ExCntyCensus_SA_NoCities")
TabulateArea <- function(indx, extracted, counties.poly, cntyname) {
dat <- as.data.frame(table(extracted[[indx]]))
dat$name <- counties.poly[[cntyname]][[indx]]
return(dat)
}
ext <- extract(ClimateRes.2011, counties.poly, method="simple")
TabulateArea <- function(indx, extracted, counties.poly, cntyname) {
dat <- as.data.frame(table(extracted[[indx]]))
dat$name <- counties.poly[[cntyname]][[indx]]
return(dat)
}
ext <- extract(ClimateRes.2011, counties.poly, method="simple")
library(raster)
library(raster)
library(rgdal)
library(rgdal)
library(bnspatial)
source("http://bioconductor.org/biocLite.R")
biocLite("RBGL")
source("http://bioconductor.org/biocLite.R")
biocLite("RBGL")
if (!requireNamespace("BiocManager")) install.packages("BiocManager")
BiocManager::install('RBGL', version = "3.8")
source("http://bioconductor.org/biocLite.R")
biocLite("RBGL")
source("http://bioconductor.org/biocLite.R")
if (!requireNamespace("BiocManager")) install.packages("BiocManager")
BiocManager::install('RBGL', version = "3.8")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
library(bnspatial)
install.packages(bnspatial)
install.packages("bnspatial")
library(bnspatial)
install.packages("RGBL")
library(bnspatial)
library(reshape2)
library(dplyr)
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
library(raster)
library(rgdal)
library(bnspatial)
library(reshape2)
library(dplyr)
library(dplyr)
library(tidyr)
install.packages("tidyr")
library(tidyr)
library(raster)
library(rgdal)
library(bnspatial)
library(reshape2)
library(dplyr)
library(tidyr)
# metrics
ClimateRes <- raster("U:/CLI/SpatialData/VAClipRaw/VA_Habitat/VA_Habitat_Ed/ClimateResilience/ClimateResilience_0v1.tif")
EO <- raster("V:/IaraSpatialLayers/SpatialData/VAClipRaw/VA_Species/Species_Ed/EO_count.tif")
WatershedConsPrior <- raster("U:/CLI/SpatialData/VAClipRaw/VA_HydroWatersh/VA_HydroWatersh_ed/ConsPrior_prjC.tif")
PI <- raster("U:/CLI/PreparedRasters/StudyAreaBndy/PI_16_an.img")
# forest masks
for.2011 <- raster("U:/CLI/SpatialData/VAClipRaw/VA_NLCD/NLCD_Ed/indv/for")
for.Q1 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q1_05_for_onlyND.tif")
for.Q2 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q2_05_for_onlyND.tif")
for.Q3 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q3_05_for_onlyND.tif")
for.Q4 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q4_05_for_onlyND.tif")
for.RT <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_RT_05_for_onlyND.tif")
ClimateRes.2011 <- extractByMask(ClimateRes, for.2011, spatial=TRUE)
# get county polygon (later - can i do it by raster instead?)
counties.poly <- readOGR(dsn=("U:/CLI/SpatialData/VAClipRaw/VA_Boundaries/CountiesEd/ExCntyCensus_SA_NoCities.shp"), layer="ExCntyCensus_SA_NoCities")
TabulateArea <- function(indx, extracted, counties.poly, cntyname) {
dat <- as.data.frame(table(extracted[[indx]]))
dat$name <- counties.poly[[cntyname]][[indx]]
return(dat)
}
ext <- extract(ClimateRes.2011, counties.poly, method="simple")
library(magrittr)
library(raster)
library(rgdal)
library(bnspatial)
library(reshape2)
library(dplyr)
library(tidyr)
library(magrittr)
# metrics
ClimateRes <- raster("U:/CLI/SpatialData/VAClipRaw/VA_Habitat/VA_Habitat_Ed/ClimateResilience/ClimateResilience_0v1.tif")
EO <- raster("V:/IaraSpatialLayers/SpatialData/VAClipRaw/VA_Species/Species_Ed/EO_count.tif")
WatershedConsPrior <- raster("U:/CLI/SpatialData/VAClipRaw/VA_HydroWatersh/VA_HydroWatersh_ed/ConsPrior_prjC.tif")
PI <- raster("U:/CLI/PreparedRasters/StudyAreaBndy/PI_16_an.img")
# forest masks
for.2011 <- raster("U:/CLI/SpatialData/VAClipRaw/VA_NLCD/NLCD_Ed/indv/for")
for.Q1 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q1_05_for_onlyND.tif")
for.Q2 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q2_05_for_onlyND.tif")
for.Q3 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q3_05_for_onlyND.tif")
for.Q4 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q4_05_for_onlyND.tif")
for.RT <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_RT_05_for_onlyND.tif")
ClimateRes.2011 <- extractByMask(ClimateRes, for.2011, spatial=TRUE)
# get county polygon (later - can i do it by raster instead?)
counties.poly <- readOGR(dsn=("U:/CLI/SpatialData/VAClipRaw/VA_Boundaries/CountiesEd/ExCntyCensus_SA_NoCities.shp"), layer="ExCntyCensus_SA_NoCities")
TabulateArea <- function(indx, extracted, counties.poly, cntyname) {
dat <- as.data.frame(table(extracted[[indx]]))
dat$name <- counties.poly[[cntyname]][[indx]]
return(dat)
}
ext <- extract(ClimateRes.2011, counties.poly, method="simple")
library(magrittr)
ext <- extract(ClimateRes.2011, counties.poly, method="simple")
library(tidyr)
ext <- extract(ClimateRes.2011, counties.poly, method="simple")
library(magrittr)
ext <- extract(ClimateRes.2011, counties.poly, method="simple")
library(raster)
library(rgdal)
library(bnspatial)
library(reshape2)
library(dplyr)
library(tidyr)
library(magrittr)
# metrics
ClimateRes <- raster("U:/CLI/SpatialData/VAClipRaw/VA_Habitat/VA_Habitat_Ed/ClimateResilience/ClimateResilience_0v1.tif")
EO <- raster("V:/IaraSpatialLayers/SpatialData/VAClipRaw/VA_Species/Species_Ed/EO_count.tif")
WatershedConsPrior <- raster("U:/CLI/SpatialData/VAClipRaw/VA_HydroWatersh/VA_HydroWatersh_ed/ConsPrior_prjC.tif")
PI <- raster("U:/CLI/PreparedRasters/StudyAreaBndy/PI_16_an.img")
# forest masks
for.2011 <- raster("U:/CLI/SpatialData/VAClipRaw/VA_NLCD/NLCD_Ed/indv/for")
for.Q1 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q1_05_for_onlyND.tif")
for.Q2 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q2_05_for_onlyND.tif")
for.Q3 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q3_05_for_onlyND.tif")
for.Q4 <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_Q4_05_for_onlyND.tif")
for.RT <- raster("U:/CLI/Dinamica_Runs/StudyArea_V201/SA_V2016/OutputProducts/Spatial Data/Indv/NoData/v2016_RT_05_for_onlyND.tif")
ClimateRes.2011 <- extractByMask(ClimateRes, for.2011, spatial=TRUE)
# get county polygon (later - can i do it by raster instead?)
counties.poly <- readOGR(dsn=("U:/CLI/SpatialData/VAClipRaw/VA_Boundaries/CountiesEd/ExCntyCensus_SA_NoCities.shp"), layer="ExCntyCensus_SA_NoCities")
TabulateArea <- function(indx, extracted, counties.poly, cntyname) {
dat <- as.data.frame(table(extracted[[indx]]))
dat$name <- counties.poly[[cntyname]][[indx]]
return(dat)
}
ext <- extract(ClimateRes.2011, counties.poly, method="simple")
