library(plyr) # General data manipulation
library(dplyr) # General data manipulation
library(stringr) # Character string manipulation
library(raster) # read and edit rasters
cntyRasterLoc <- "V:/IaraSpatialLayers/PreparedRasters/StudyAreaBndy/"
# Rasters for comparison ( now includes folder with duplicate NLCD rasters for ease in scripting)
RasterLoc <- "V:/IaraSpatialLayers/Dinamica_Runs/StudyArea_V201/SA_V2011/FutureLandscapes/"
# NL_addy <- "NL/nlcd_nlcd/"
# RT_addy <- "RT/done_0721/"
# Q1_addy <- "Q1/done_0721/"
# Q2_addy <- "Q2/done_0721/"
# Q3_addy <- "Q3/done_0721/"
# Q4_addy <- "Q4/done_0721/"
# Define paths for output files
Comb_output <- "V:/IaraSpatialLayers/Dinamica_Runs/StudyArea_V201/SA_V2011/Parameters/Combine/Tables/test2" # Combine and final histogram outputs for each landscape
# ----------------------------------------------
# READ OUTPUT FILES:
# ----------------------------------------------
# READ INPUT FILES:
# Land Cover Rasters:
# nl01 <- raster("V:/IaraSpatialLayers/PreparedRasters/StudyAreaBndy/nlcd01_anC.img")
# nl06 <- raster("V:/IaraSpatialLayers/PreparedRasters/StudyAreaBndy/nlcd06_anC.img")
# nl11 <- raster("V:/IaraSpatialLayers/PreparedRasters/StudyAreaBndy/nlcd11_anC.img")
# COUNTY RASTERS
regions <- raster(paste(cntyRasterLoc, "cnty_an", ".img", sep="")) # this is for the raster.
counties_vals <- getValues(regions)
# COUNTY TABLES
sa_ctyGEOID<- read.csv("V:/IaraSpatialLayers/Dinamica_Runs/StudyArea_V201/FullGEOID.csv")
colnames(sa_ctyGEOID)<-c("Din_cty", "GEOID")
str(sa_ctyGEOID)
#add leading zero to numbers with less than 1 digit
sa_ctyGEOIDzero<-sa_ctyGEOID
sa_ctyGEOIDzero$Din_cty<-sapply(sa_ctyGEOIDzero$Din_cty, function(x){if(nchar(x)<2){paste0(0,x)}else{x}})
#select only the Study Area counties to run basic analyses
S20_GEOID <-  read.csv("V:/IaraSpatialLayers/Dinamica_Runs/StudyArea_V201/SAcntyOnly.csv")#SCBI V:
############################################################################################
# ~~~ CODE BEGINS ~~~ #
############################################################################################
# ----------------------------------------------
# TRANSITIONS
# ----------------------------------------------
LS_trans <-  list(
'RT' = list(
'0111' = c("NL/nlcd_nlcd/nlcd11_anC.img", "SA_nlCcomb_0111.txt"),
'1121' = c("RT/done_0721/v2011_RT_Landscape01.tif", "v2011_RT_nlCcomb_1121.txt"),
'2131' = c("RT/done_0721/v2011_RT_Landscape02.tif", "v2011_RT_nlCcomb_2131.txt"),
'3141' = c("RT/done_0721/v2011_RT_Landscape03.tif", "v2011_RT_nlCcomb_3141.txt"),
'4151' = c("RT/done_0721/v2011_RT_Landscape04.tif", "v2011_RT_nlCcomb_4151.txt"),
'5161' = c("RT/done_0721/v2011_RT_Landscape05.tif", "v2011_RT_nlCcomb_5161.txt"))
)
old <- Sys.time() # TIMING SCRIPT
for(scenario in names(LS_trans)){ # Makes code flexible for use with more than 2 landscapes.
# print(scenario)
for(in_to_fin in names(LS_trans[[scenario]])){
# print(in_to_fin)
# print(LS_trans[[scenario]][[in_to_fin]][1])
Initial_Landscape <- paste0(RasterLoc, LS_trans[[scenario]][[in_to_fin]][1])
Final_Landscape <-paste0(RasterLoc, LS_trans[[scenario]][[in_to_fin]][2])
comb_hist_output <- paste0(Comb_output, LS_trans[[scenario]][[in_to_fin]][3])
Init_hist_output <-  paste0(Comb_output, gsub(".tif","_hist.txt",gsub(".img", "_hist.txt", str_sub(LS_trans[[scenario]][[in_to_fin]][1], 14)))) # For when rasters are of different file types.
Final_hist_output <- paste0(Comb_output, gsub(".tif","_hist.txt",gsub(".img", "_hist.txt", str_sub(LS_trans[[scenario]][[in_to_fin]][2], 14))))
print("Initial_Landscape")
print(Initial_Landscape)
print("Final_Landscape"  )
print(Final_Landscape  )
print("comb_hist_output" )
print(comb_hist_output )
print("Init_hist_output" )
print(Init_hist_output )
print("Final_hist_output")
print(Final_hist_output)
Initial_Landscape <- raster(Initial_Landscape)
Final_Landscape <- raster(Final_Landscape)
init_vals <- getValues(Initial_Landscape)
fin_vals <- getValues(Final_Landscape)
# ----------------------------------------------
# ----------------------------------------------
{# ZONAL HISTOGRAM ON TRANSITIONS BETWEEN (2001-2011) LANDSCAPES
# ----------------------------------------------
# ----------------------------------------------
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
# Select desired transitions
comb_infi <- paste0(init_vals, fin_vals)
comb_infi[comb_infi == "NANA"] <- NA
comb_infi <- ifelse(comb_infi %in% c("33","55","66","77","53","63","73","65","75","56","76","57","67"), comb_infi, 0)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
#add county values
comb_infi <- paste0(comb_infi, ".", counties_vals)
# > unique(comb_infi)
# [1] "0.NA"  "55.18" "22.18" "66.18" "55.19" "22.19" "66.19" "33.19" "77.18" "56.18" "33.18" "0.19"  "0.18"
# [14] "77.19" "55.17" "0.17"  "77.17" "22.17" ...
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
#summarise pixels
comb_infi_hist0 <- summary(factor(comb_infi), maxsum = length(unique(comb_infi))) # had to add maxsum = length(unique(comb_infi)) because otherwise doesn't show all possible values and there is a column called "others"  - Val
# > comb_infi_hist0
# 0.1     0.10     0.11     0.12     0.13     0.14     0.15     0.16     0.17     0.18     0.19      0.2
# 774    63909     1640     3256   109002...
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
#remove values that we don't want
comb_infi_hist0 <- comb_infi_hist0[-grep("^(-?)0.", names(comb_infi_hist0))]##CF- understad task, dont understand language
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
#Reorganize #CF- create table with county as row, transition as column
comb_infi_hist <- sa_ctyGEOID
for(i in comb_infi_hist$Din_cty){
paste(i)
for (j in c("33","55","66","77","53","63","73","65","75","56","76","57","67")){
if(any(names(comb_infi_hist0) == paste(j, i, sep = "."))){
comb_infi_hist[comb_infi_hist$Din_cty == i, as.character(j)] <- comb_infi_hist0[names(comb_infi_hist0) == paste(j, i, sep = ".")]
}}}
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
# Reformat Table #CF- create table with county as column, transition as row
comb_infi_hist <- t(comb_infi_hist[-1])
colnames(comb_infi_hist) <- paste0("GEOID_", comb_infi_hist[1,])
comb_infi_hist <- comb_infi_hist[-1,]
comb_infi_hist <- cbind(data.frame(Rowid_ = 1:nrow(comb_infi_hist),LABEL = rownames(comb_infi_hist)), comb_infi_hist)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
# Remove NAs #CF- convert NA to 0
comb_infi_hist[is.na(comb_infi_hist)]<-0
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
#save
write.table(comb_infi_hist, file = comb_hist_output, row.names=FALSE, sep=",")
}
}
old <- Sys.time() # TIMING SCRIPT
for(scenario in names(LS_trans)){ # Makes code flexible for use with more than 2 landscapes.
# print(scenario)
for(in_to_fin in names(LS_trans[[scenario]])){
# print(in_to_fin)
# print(LS_trans[[scenario]][[in_to_fin]][1])
Initial_Landscape <- paste0(RasterLoc, LS_trans[[scenario]][[in_to_fin]][1])
Final_Landscape <-paste0(RasterLoc, LS_trans[[scenario]][[in_to_fin]][2])
comb_hist_output <- paste0(Comb_output, LS_trans[[scenario]][[in_to_fin]][3])
Init_hist_output <-  paste0(Comb_output, gsub(".tif","_hist.txt",gsub(".img", "_hist.txt", str_sub(LS_trans[[scenario]][[in_to_fin]][1], 14)))) # For when rasters are of different file types.
Final_hist_output <- paste0(Comb_output, gsub(".tif","_hist.txt",gsub(".img", "_hist.txt", str_sub(LS_trans[[scenario]][[in_to_fin]][2], 14))))
print("Initial_Landscape")
print(Initial_Landscape)
print("Final_Landscape"  )
print(Final_Landscape  )
print("comb_hist_output" )
print(comb_hist_output )
print("Init_hist_output" )
print(Init_hist_output )
print("Final_hist_output")
print(Final_hist_output)
Initial_Landscape <- raster(Initial_Landscape)
Final_Landscape <- raster(Final_Landscape)
init_vals <- getValues(Initial_Landscape)
fin_vals <- getValues(Final_Landscape)
# ----------------------------------------------
# ----------------------------------------------
{# ZONAL HISTOGRAM ON TRANSITIONS BETWEEN (2001-2011) LANDSCAPES
# ----------------------------------------------
# ----------------------------------------------
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
# Select desired transitions
comb_infi <- paste0(init_vals, fin_vals)
comb_infi[comb_infi == "NANA"] <- NA
comb_infi <- ifelse(comb_infi %in% c("33","55","66","77","53","63","73","65","75","56","76","57","67"), comb_infi, 0)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
#add county values
comb_infi <- paste0(comb_infi, ".", counties_vals)
# > unique(comb_infi)
# [1] "0.NA"  "55.18" "22.18" "66.18" "55.19" "22.19" "66.19" "33.19" "77.18" "56.18" "33.18" "0.19"  "0.18"
# [14] "77.19" "55.17" "0.17"  "77.17" "22.17" ...
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
#summarise pixels
comb_infi_hist0 <- summary(factor(comb_infi), maxsum = length(unique(comb_infi))) # had to add maxsum = length(unique(comb_infi)) because otherwise doesn't show all possible values and there is a column called "others"  - Val
# > comb_infi_hist0
# 0.1     0.10     0.11     0.12     0.13     0.14     0.15     0.16     0.17     0.18     0.19      0.2
# 774    63909     1640     3256   109002...
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
#remove values that we don't want
comb_infi_hist0 <- comb_infi_hist0[-grep("^(-?)0.", names(comb_infi_hist0))]##CF- understad task, dont understand language
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
#Reorganize #CF- create table with county as row, transition as column
comb_infi_hist <- sa_ctyGEOID
for(i in comb_infi_hist$Din_cty){
paste(i)
for (j in c("33","55","66","77","53","63","73","65","75","56","76","57","67")){
if(any(names(comb_infi_hist0) == paste(j, i, sep = "."))){
comb_infi_hist[comb_infi_hist$Din_cty == i, as.character(j)] <- comb_infi_hist0[names(comb_infi_hist0) == paste(j, i, sep = ".")]
}}}
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
# Reformat Table #CF- create table with county as column, transition as row
comb_infi_hist <- t(comb_infi_hist[-1])
colnames(comb_infi_hist) <- paste0("GEOID_", comb_infi_hist[1,])
comb_infi_hist <- comb_infi_hist[-1,]
comb_infi_hist <- cbind(data.frame(Rowid_ = 1:nrow(comb_infi_hist),LABEL = rownames(comb_infi_hist)), comb_infi_hist)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
# Remove NAs #CF- convert NA to 0
comb_infi_hist[is.na(comb_infi_hist)]<-0
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
#save
write.table(comb_infi_hist, file = comb_hist_output, row.names=FALSE, sep=",")
}
