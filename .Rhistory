SA_Significance_Tables_Folder <-"U:/CLI/Dinamica_Runs/Regi2Area_v301/R2_V3011/Parameters/WOE/"
# ----------------------------------------------
#path to folder to write the edited weights of evidence tables
SA_Output_Folder <- "U:/CLI/Dinamica_Runs/Regi2Area_v301/R2_V3011/Parameters/WOE_adj/"
# ----------------------------------------------
# READ INPUT FILES
# ----------------------------------------------
SA_sigTable_Files<- list.files(SA_Significance_Tables_Folder,pattern = ".*v201.*\\csv$")
# --------------------------------------------------------
# --------------------------------------------------------
# Loop through input files
# --------------------------------------------------------
# --------------------------------------------------------
# First need to run through and assign "significance" to values we want to manually edit later (to save the bins)
############
old <- Sys.time() #Time script
file <- 1
v <- 1
for(file in 1:length(SA_sigTable_Files)){
print(SA_sigTable_Files[file])
WOE_adj <- read.csv(paste0(SA_Significance_Tables_Folder,SA_sigTable_Files[file]))
WOE_adj$Variable. <- as.character(WOE_adj$Variable.)
#Protected lands - give all significant bins
try(WOE_adj[grepl("prot_gap_16", WOE_adj$Variable.)& WOE_adj$Transition_To.==3,]$Significant<- 1)
try(WOE_adj[grepl("prot_gap_16", WOE_adj$Variable.)& WOE_adj$Transition_To.==6,]$Significant<- 1)
#geology - give all significant bins
try(WOE_adj[grepl("geology", WOE_adj$Variable.)& WOE_adj$Transition_To.==3,]$Significant<- 1)
#future_growth - give all significant bins
try(WOE_adj[grepl("future_growth", WOE_adj$Variable.)& WOE_adj$Transition_To.==3,]$Significant<- 1)
saWOE_Edited <- data.frame(matrix(nrow = 1, ncol = 5))
names(saWOE_Edited) <- names(WOE_adj)[1:5]
WOE_adj$X<-paste(WOE_adj$Transition_From., WOE_adj$Transition_To., WOE_adj$Variable., sep="_")
Params <- unique(WOE_adj$X) #need something for more than one transition... # remove ?
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
row <- 1
for(v in 1:length(Params)){
Par <- subset(WOE_adj,WOE_adj$X == Params[v], select = names(WOE_adj[c(1:5,10)])) # for each unique transition, select only columns that matter for next step
saSignifRV <- subset(Par,Par$Significant == 1)
if(dim(saSignifRV)[1] > 0){
for(n in 1:nrow(saSignifRV)){
if(n < nrow(saSignifRV)){ # if each row (n) is less than the number of total rows..basically for all but the last row.
saSignifRV[n,5] <- saSignifRV[n+1,4] # calls the lower range limit for each row except for the first. and assigns that value as the upper range limit.
}
}
saSignifRV[1,4] <- Par[1,4] # Min
saSignifRV[nrow(saSignifRV),5] <- Par[nrow(Par),5] # Max -groups the non sig next classes with the previous sig class
}else{                    # if there are no significant range classes
saSignifRV <- Par[1,]
saSignifRV[1,4] <- Par[1,4] # Min
saSignifRV[1,5] <- Par[nrow(Par),5] # Max
}
saSignifRV <- saSignifRV[,-6]
names(saSignifRV) <- names(saWOE_Edited)
saWOE_Edited <- rbind(saWOE_Edited,saSignifRV)
}
saWOE_Edited <- saWOE_Edited[-1,]
saWOE_Edited$Weight <- 0
names(saWOE_Edited) <- c(paste("From","*",sep=""),paste("To","*",sep=""),paste("Variable","*",sep="") ,paste("Range_Lower_Limit","*",sep=""), paste("Range_Upper_Limit","*",sep="" ),"Weight")
write.csv(saWOE_Edited,file = paste0(SA_Output_Folder,"s",SA_sigTable_Files[file]),row.names = FALSE)
}
new<-Sys.time()-old
print(new)
SA_Recalc_Tables_Folder <-"U:/CLI/Dinamica_Runs/Regi2Area_v301/R2_V3011/Parameters/Parameters/WOE_recalc/"
# ----------------------------------------------
#path to folder to write the edited weights of evidence tables
SA_Output_Folder <- "U:/CLI/Dinamica_Runs/Regi2Area_v301/R2_V3011/Parameters/WOE_recalc/LPA/"
### TEST ###
# ----------------------------------------------
# LIST OF FILES *** CHANGE TO FILE PATTERN NEEDED ***
# ----------------------------------------------
SA_recTable_Files<- list.files(SA_Recalc_Tables_Folder,pattern = ".*v201.*\\csv$")
# --------------------------------------------------------
# --------------------------------------------------------
# ASSIGN WOE
# --------------------------------------------------------
# --------------------------------------------------------
# --------------------------------------------------------
# CHANGE WOE FOR PROTECTED LANDS & GEOLOGY
# --------------------------------------------------------
# - 7-14-17:
# # Protected lands: change WOE for 56 and 57 to -3 for GAP 1,2,3;  +3 for GAP status =4 and 5.
# # Protected lands: change WOE for 53, 63, & 73 to -100 for all GAP
# # geology = 2 WOE of -3
# # See what's going on here:
# geology <- filter(sav201allWOE_sabuff, Variable.==" nlcdC_11/geology")
# Loudoun <- filter(geology, Din_cty=="rv201_WOE04")
# View(Loudoun)
# View(geology)
NoForTr <- c(3,7)
old <- Sys.time() #Time script
WOE_pg <- list()
t_t <- 1
for(f in 1:length(SA_recTable_Files)){
print(f)
print(paste(t_t, ':'))
WOE_pg[[t_t]] <- read.csv(paste0(SA_Recalc_Tables_Folder,SA_recTable_Files[f]))
WOE_pg[[t_t]]<-WOE_pg[[f]][,c(1:6)]
WOE_pg[[t_t]]$Variable. <- as.character(WOE_pg[[f]]$Variable.) # Factor->Character
for(t in NoForTr){
print(t)
# Protected Lands:
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==t & WOE_pg[[f]]$Range_Lower_Limit.<6 & WOE_pg[[f]]$Range_Upper_Limit.<=6,]$Weight<- -100)# no crop or development in protected lands for gap status 1-5
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==6,]$Weight<- -1) #limited development in gap status 6, crop is allowed to stay as default
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==6 & WOE_pg[[f]]$Range_Lower_Limit.<4 & WOE_pg[[f]]$Range_Upper_Limit.<=4,]$Weight<- -3) # decrease prob of conversion to grasses in GAP 1-3, default is allowed to stay for GAP status 4-6
# try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==6 & WOE_pg[[f]]$Range_Lower_Limit.>=4& WOE_pg[[f]]$Range_Upper_Limit.<=5,]$Weight<- 3) #increase prob of conversion to grasses in GAP 4, code turned off before May 2018 meeting
# Geology:
try(WOE_pg[[t_t]][grepl("geology", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==2,]$Weight<- -3)
# future_growth:
try(WOE_pg[[t_t]][grepl("future_growth", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==1,]$Weight<- 3.5)
}
names(WOE_pg[[t_t]]) <- c(paste("From","*",sep=""),paste("To","*",sep=""),paste("Variable","*",sep="") ,paste("Range_Lower_Limit","*",sep=""), paste("Range_Upper_Limit","*",sep="" ),"Weight")
write.csv(WOE_pg[[t_t]],file = paste0(SA_Output_Folder,"pg",SA_recTable_Files[[f]]),row.names = FALSE)
t_t<-t_t+1
}
new<-Sys.time()-old
print(new)
SA_Recalc_Tables_Folder <-"U:/CLI/Dinamica_Runs/Regi2Area_v301/R2_V3011/Parameters/Parameters/WOE_recalc/"
# ----------------------------------------------
#path to folder to write the edited weights of evidence tables
SA_Output_Folder <- "U:/CLI/Dinamica_Runs/Regi2Area_v301/R2_V3011/Parameters/WOE_recalc/LPA/"
### TEST ###
# ----------------------------------------------
# LIST OF FILES *** CHANGE TO FILE PATTERN NEEDED ***
# ----------------------------------------------
SA_recTable_Files<- list.files(SA_Recalc_Tables_Folder,pattern = ".*v201.*\\csv$")
# --------------------------------------------------------
# --------------------------------------------------------
# ASSIGN WOE
# --------------------------------------------------------
# --------------------------------------------------------
# --------------------------------------------------------
# CHANGE WOE FOR PROTECTED LANDS & GEOLOGY
# --------------------------------------------------------
# - 7-14-17:
# # Protected lands: change WOE for 56 and 57 to -3 for GAP 1,2,3;  +3 for GAP status =4 and 5.
# # Protected lands: change WOE for 53, 63, & 73 to -100 for all GAP
# # geology = 2 WOE of -3
# # See what's going on here:
# geology <- filter(sav201allWOE_sabuff, Variable.==" nlcdC_11/geology")
# Loudoun <- filter(geology, Din_cty=="rv201_WOE04")
# View(Loudoun)
# View(geology)
NoForTr <- c(3,7)
old <- Sys.time() #Time script
WOE_pg <- list()
t_t <- 1
for(f in 1:length(SA_recTable_Files)){
print(f)
print(paste(t_t, ':'))
WOE_pg[[t_t]] <- read.csv(paste0(SA_Recalc_Tables_Folder,SA_recTable_Files[f]))
WOE_pg[[t_t]]<-WOE_pg[[f]][,c(1:6)]
WOE_pg[[t_t]]$Variable. <- as.character(WOE_pg[[f]]$Variable.) # Factor->Character
for(t in NoForTr){
print(t)
# Protected Lands:
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==t & WOE_pg[[f]]$Range_Lower_Limit.<6 & WOE_pg[[f]]$Range_Upper_Limit.<=6,]$Weight<- -100)# no crop or development in protected lands for gap status 1-5
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==6,]$Weight<- -1) #limited development in gap status 6, crop is allowed to stay as default
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==6 & WOE_pg[[f]]$Range_Lower_Limit.<4 & WOE_pg[[f]]$Range_Upper_Limit.<=4,]$Weight<- -3) # decrease prob of conversion to grasses in GAP 1-3, default is allowed to stay for GAP status 4-6
# try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==6 & WOE_pg[[f]]$Range_Lower_Limit.>=4& WOE_pg[[f]]$Range_Upper_Limit.<=5,]$Weight<- 3) #increase prob of conversion to grasses in GAP 4, code turned off before May 2018 meeting
# Geology:
try(WOE_pg[[t_t]][grepl("geology", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==2,]$Weight<- -3)
# future_growth:
try(WOE_pg[[t_t]][grepl("future_growth", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==1,]$Weight<- 3.5)
}
names(WOE_pg[[t_t]]) <- c(paste("From","*",sep=""),paste("To","*",sep=""),paste("Variable","*",sep="") ,paste("Range_Lower_Limit","*",sep=""), paste("Range_Upper_Limit","*",sep="" ),"Weight")
write.csv(WOE_pg[[t_t]],file = paste0(SA_Output_Folder,"pg",SA_recTable_Files[[f]]),row.names = FALSE)
t_t<-t_t+1
}
new<-Sys.time()-old
print(new)
SA_recTable_Files
SA_Recalc_Tables_Folder <-"U:/CLI/Dinamica_Runs/Regi2Area_v301/R2_V3011/Parameters/WOE_recalc/"
# ----------------------------------------------
#path to folder to write the edited weights of evidence tables
SA_Output_Folder <- "U:/CLI/Dinamica_Runs/Regi2Area_v301/R2_V3011/Parameters/WOE_recalc/LPA/"
### TEST ###
# ----------------------------------------------
# LIST OF FILES *** CHANGE TO FILE PATTERN NEEDED ***
# ----------------------------------------------
SA_recTable_Files<- list.files(SA_Recalc_Tables_Folder,pattern = ".*v201.*\\csv$")
# --------------------------------------------------------
# --------------------------------------------------------
# ASSIGN WOE
# --------------------------------------------------------
# --------------------------------------------------------
# --------------------------------------------------------
# CHANGE WOE FOR PROTECTED LANDS & GEOLOGY
# --------------------------------------------------------
# - 7-14-17:
# # Protected lands: change WOE for 56 and 57 to -3 for GAP 1,2,3;  +3 for GAP status =4 and 5.
# # Protected lands: change WOE for 53, 63, & 73 to -100 for all GAP
# # geology = 2 WOE of -3
# # See what's going on here:
# geology <- filter(sav201allWOE_sabuff, Variable.==" nlcdC_11/geology")
# Loudoun <- filter(geology, Din_cty=="rv201_WOE04")
# View(Loudoun)
# View(geology)
NoForTr <- c(3,7)
old <- Sys.time() #Time script
WOE_pg <- list()
t_t <- 1
for(f in 1:length(SA_recTable_Files)){
print(f)
print(paste(t_t, ':'))
WOE_pg[[t_t]] <- read.csv(paste0(SA_Recalc_Tables_Folder,SA_recTable_Files[f]))
WOE_pg[[t_t]]<-WOE_pg[[f]][,c(1:6)]
WOE_pg[[t_t]]$Variable. <- as.character(WOE_pg[[f]]$Variable.) # Factor->Character
for(t in NoForTr){
print(t)
# Protected Lands:
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==t & WOE_pg[[f]]$Range_Lower_Limit.<6 & WOE_pg[[f]]$Range_Upper_Limit.<=6,]$Weight<- -100)# no crop or development in protected lands for gap status 1-5
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==6,]$Weight<- -1) #limited development in gap status 6, crop is allowed to stay as default
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==6 & WOE_pg[[f]]$Range_Lower_Limit.<4 & WOE_pg[[f]]$Range_Upper_Limit.<=4,]$Weight<- -3) # decrease prob of conversion to grasses in GAP 1-3, default is allowed to stay for GAP status 4-6
# try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==6 & WOE_pg[[f]]$Range_Lower_Limit.>=4& WOE_pg[[f]]$Range_Upper_Limit.<=5,]$Weight<- 3) #increase prob of conversion to grasses in GAP 4, code turned off before May 2018 meeting
# Geology:
try(WOE_pg[[t_t]][grepl("geology", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==2,]$Weight<- -3)
# future_growth:
try(WOE_pg[[t_t]][grepl("future_growth", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==1,]$Weight<- 3.5)
}
names(WOE_pg[[t_t]]) <- c(paste("From","*",sep=""),paste("To","*",sep=""),paste("Variable","*",sep="") ,paste("Range_Lower_Limit","*",sep=""), paste("Range_Upper_Limit","*",sep="" ),"Weight")
write.csv(WOE_pg[[t_t]],file = paste0(SA_Output_Folder,"pg",SA_recTable_Files[[f]]),row.names = FALSE)
t_t<-t_t+1
}
new<-Sys.time()-old
print(new)
SA_recTable_Files
f
WOE_pg[[t_t]] <- read.csv(paste0(SA_Recalc_Tables_Folder,SA_recTable_Files[f]))
WOE_pg[[t_t]] <- read.csv(paste0(SA_Recalc_Tables_Folder,SA_recTable_Files[f]))
WOE_pg[[t_t]]
print(paste(t_t, ':'))
WOE_pg[[t_t]]<-WOE_pg[[f]][,c(1:6)]
WOE_pg[[t_t]]$Variable. <- as.character(WOE_pg[[f]]$Variable.) # Factor->Character
for(t in NoForTr){
print(t)
# Protected Lands:
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==t & WOE_pg[[f]]$Range_Lower_Limit.<6 & WOE_pg[[f]]$Range_Upper_Limit.<=6,]$Weight<- -100)# no crop or development in protected lands for gap status 1-5
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==6,]$Weight<- -1) #limited development in gap status 6, crop is allowed to stay as default
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==6 & WOE_pg[[f]]$Range_Lower_Limit.<4 & WOE_pg[[f]]$Range_Upper_Limit.<=4,]$Weight<- -3) # decrease prob of conversion to grasses in GAP 1-3, default is allowed to stay for GAP status 4-6
# try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==6 & WOE_pg[[f]]$Range_Lower_Limit.>=4& WOE_pg[[f]]$Range_Upper_Limit.<=5,]$Weight<- 3) #increase prob of conversion to grasses in GAP 4, code turned off before May 2018 meeting
# Geology:
try(WOE_pg[[t_t]][grepl("geology", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==2,]$Weight<- -3)
# future_growth:
try(WOE_pg[[t_t]][grepl("future_growth", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==1,]$Weight<- 3.5)
}
names(WOE_pg[[t_t]]) <- c(paste("From","*",sep=""),paste("To","*",sep=""),paste("Variable","*",sep="") ,paste("Range_Lower_Limit","*",sep=""), paste("Range_Upper_Limit","*",sep="" ),"Weight")
write.csv(WOE_pg[[t_t]],file = paste0(SA_Output_Folder,"pg",SA_recTable_Files[[f]]),row.names = FALSE)
SA_Recalc_Tables_Folder <-"U:/CLI/Dinamica_Runs/Regi2Area_v301/R2_V3011/Parameters/WOE_recalc/"
# ----------------------------------------------
#path to folder to write the edited weights of evidence tables
SA_Output_Folder <- "U:/CLI/Dinamica_Runs/Regi2Area_v301/R2_V3011/Parameters/WOE_recalc/LPA/"
### TEST ###
# ----------------------------------------------
# LIST OF FILES *** CHANGE TO FILE PATTERN NEEDED ***
# ----------------------------------------------
SA_recTable_Files<- list.files(SA_Recalc_Tables_Folder,pattern = ".*v201.*\\csv$")
# --------------------------------------------------------
# --------------------------------------------------------
# ASSIGN WOE
# --------------------------------------------------------
# --------------------------------------------------------
# --------------------------------------------------------
# CHANGE WOE FOR PROTECTED LANDS & GEOLOGY
# --------------------------------------------------------
# - 7-14-17:
# # Protected lands: change WOE for 56 and 57 to -3 for GAP 1,2,3;  +3 for GAP status =4 and 5.
# # Protected lands: change WOE for 53, 63, & 73 to -100 for all GAP
# # geology = 2 WOE of -3
# # See what's going on here:
# geology <- filter(sav201allWOE_sabuff, Variable.==" nlcdC_11/geology")
# Loudoun <- filter(geology, Din_cty=="rv201_WOE04")
# View(Loudoun)
# View(geology)
NoForTr <- c(3,7)
old <- Sys.time() #Time script
WOE_pg <- list()
t_t <- 1
for(f in 1:length(SA_recTable_Files)){
print(f)
print(paste(t_t, ':'))
WOE_pg[[t_t]] <- read.csv(paste0(SA_Recalc_Tables_Folder,SA_recTable_Files[f]))
WOE_pg[[t_t]]<-WOE_pg[[f]][,c(1:6)]
WOE_pg[[t_t]]$Variable. <- as.character(WOE_pg[[f]]$Variable.) # Factor->Character
for(t in NoForTr){
print(t)
# Protected Lands:
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==t & WOE_pg[[f]]$Range_Lower_Limit.<6 & WOE_pg[[f]]$Range_Upper_Limit.<=6,]$Weight<- -100)# no crop or development in protected lands for gap status 1-5
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==6,]$Weight<- -1) #limited development in gap status 6, crop is allowed to stay as default
try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==6 & WOE_pg[[f]]$Range_Lower_Limit.<4 & WOE_pg[[f]]$Range_Upper_Limit.<=4,]$Weight<- -3) # decrease prob of conversion to grasses in GAP 1-3, default is allowed to stay for GAP status 4-6
# try(WOE_pg[[t_t]][grepl("prot_gap_11", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==6 & WOE_pg[[f]]$Range_Lower_Limit.>=4& WOE_pg[[f]]$Range_Upper_Limit.<=5,]$Weight<- 3) #increase prob of conversion to grasses in GAP 4, code turned off before May 2018 meeting
# Geology:
try(WOE_pg[[t_t]][grepl("geology", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==2,]$Weight<- -3)
# future_growth:
try(WOE_pg[[t_t]][grepl("future_growth", WOE_pg[[f]]$Variable.)& WOE_pg[[f]]$To.==3 & WOE_pg[[f]]$Range_Lower_Limit.==1,]$Weight<- 3.5)
}
names(WOE_pg[[t_t]]) <- c(paste("From","*",sep=""),paste("To","*",sep=""),paste("Variable","*",sep="") ,paste("Range_Lower_Limit","*",sep=""), paste("Range_Upper_Limit","*",sep="" ),"Weight")
write.csv(WOE_pg[[t_t]],file = paste0(SA_Output_Folder,"pg",SA_recTable_Files[[f]]),row.names = FALSE)
t_t<-t_t+1
}
new<-Sys.time()-old
print(new)
